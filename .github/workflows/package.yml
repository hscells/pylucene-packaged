on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:

env:
  MIRROR: downloads
  LUCENE_VERSION: 9.12.0
  ANT_VERSION: 1.10.14

jobs:

  build_wheel:

    strategy:
      matrix:
        #os: [ macos-14, macos-15, ubuntu-latest ]
        os: [ ubuntu-latest ]
        python-version: [ 3.10.11 ]
  
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Remove java
        run: |
          sudo rm -rf /usr/lib/jvm/
      - uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Validate java config
        run: |
          java --version
          echo $JAVA_HOME    
          update-alternatives --display java

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Download dependencies
        run: |
          curl -O https://${{env.MIRROR}}.apache.org/lucene/pylucene/pylucene-${{env.LUCENE_VERSION}}-src.tar.gz
          gunzip pylucene-${{env.LUCENE_VERSION}}-src.tar.gz
          tar -xf pylucene-${{env.LUCENE_VERSION}}-src.tar
          rm pylucene-${{env.LUCENE_VERSION}}-src.tar

          curl -O https://${{env.MIRROR}}.apache.org/ant/binaries/apache-ant-${{env.ANT_VERSION}}-bin.tar.gz
          gunzip apache-ant-${{env.ANT_VERSION}}-bin.tar.gz
          tar -xf apache-ant-${{env.ANT_VERSION}}-bin.tar
          rm apache-ant-${{env.ANT_VERSION}}-bin.tar
          mv apache-ant-${{env.ANT_VERSION}} ant-${{env.ANT_VERSION}}
          echo "$(pwd)/ant-${{env.ANT_VERSION}}/bin" >> $GITHUB_PATH
          
          python -m pip install --user --upgrade pip build wheel setuptools

      - name: Install JCC
        working-directory: ./pylucene-${{env.LUCENE_VERSION}}/jcc
        env:
          JCC_JDK: ${{ env.JAVA_HOME }}
          JCC_ARGSEP: ";"
          JCC_LFLAGS: "-L${{ env.JAVA_HOME }}/lib;-ljava;-L${{ env.JAVA_HOME }}/lib/server;-ljvm;-Wl,-rpath=${{ env.JAVA_HOME }}/lib:${{ env.JAVA_HOME }}/lib/server"
        run: |
          python setup.py build
          python setup.py install

      # - name: Initialize gradle settings
      #   working-directory: ./pylucene-${{env.LUCENE_VERSION}}/lucene-java-${{env.LUCENE_VERSION}}
      #   env:
      #     JAVA17_HOME: ${{ env.JAVA_HOME }}
      #     JAVA19_HOME: ""
      #     JAVA20_HOME: ""
      #     JAVA21_HOME: ""
      #     JAVA22_HOME: ""
      #     RUNTIME_JAVA_HOME: ${{ env.JAVA_HOME }}
      #   run: |
      #     echo $JAVA_HOME
      #     echo $(which java)
      #     ./gradlew localSettings

      - name: Install PyLucene
        working-directory: ./pylucene-${{env.LUCENE_VERSION}}
        env:
          JAVA17_HOME: ${{ env.JAVA_HOME }}
          JAVA19_HOME: ""
          JAVA20_HOME: ""
          JAVA21_HOME: ""
          JAVA22_HOME: ""
          RUNTIME_JAVA_HOME: ${{ env.JAVA_HOME }}        
        run: |
          echo $JAVA_HOME
          echo $(which java)
          ANT=$(which ant) PYTHON=$(which python) JCC="python -m jcc --wheel" NUM_FILES=10 make

      - name: Upload wheel
        run: |
          mkdir -p dist
          mv pylucene-${{env.LUCENE_VERSION}}/dist/*.whl dist/
          
          git config --global user.email "harryscells@gmail.com"
          git config --global user.name "Harry Scells"
          git add -f dist/*.whl
          git commit -m ":robot: Update ${{matrix.os}} wheel for pylucene ${{env.LUCENE_VERSION}}"
          git pull --rebase
          git push
